{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","handleReset","setState","handleReverse","handleSort","sortBy","this","listOfGoods","goods","visibleGoods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAgCE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,YAAc,WACZ,EAAKC,SAAS,CAAEJ,YAAY,EAAOC,SAAUL,EAASM,QAP1D,EAUEG,cAAgB,WACd,EAAKD,UAAS,SAAAL,GACZ,MAAO,CACLC,YAAaD,EAAMC,gBAb3B,EAkBEM,WAAa,SAACC,GACZ,EAAKH,SAAS,CAAEH,SAAUM,KAnB9B,4CAsBE,WAAU,IAAD,OACP,EAAiCC,KAAKT,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAEdQ,EA9CH,SACLC,EADK,GAGJ,IADCT,EACF,EADEA,SAAUD,EACZ,EADYA,WAENW,EAAY,YAAOD,GAYzB,OAVIT,IAAaL,EAASgB,SACxBD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MACnCd,IAAaL,EAASqB,QAC/BN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAGvClB,GACFW,EAAaQ,UAGRR,EA8BeS,CAClBvB,EAAiB,CAAEG,aAAYC,aAGjC,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBpB,IAAaL,EAASgB,SAAW,WAAa,IAC3EW,QAAS,kBAAM,EAAKjB,WAAWV,EAASgB,WAH1C,iCAQA,wBACEU,KAAK,SACLD,UAAS,4BAAuBpB,IAAaL,EAASqB,OAAS,WAAa,IAC5EM,QAAS,kBAAM,EAAKjB,WAAWV,EAASqB,SAH1C,4BAQA,wBACEK,KAAK,SACLD,UAAS,4BAAwBrB,EAA0B,GAAb,YAC9CuB,QAASf,KAAKH,cAHhB,qBASEL,GAAcC,IAAaL,EAASM,KAEhC,wBACEoB,KAAK,SACLD,UAAU,4BACVE,QAASf,KAAKL,YAHhB,mBAQC,QAKT,6BAEIM,EAAYe,KAAI,SAAAC,GAAI,OAAI,6BAAgBA,GAAPA,eA1E7C,GAAyBC,IAAMC,WC9C/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0c9c5a6e.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort((a, b) => a.localeCompare(b));\n  } else if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((a, b) => a.length - b.length);\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = ReorderOptions;\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleReset = () => {\n    this.setState({ isReversed: false, sortType: SortType.NONE });\n  };\n\n  handleReverse = () => {\n    this.setState(state => {\n      return {\n        isReversed: !state.isReversed,\n      };\n    });\n  };\n\n  handleSort = (sortBy: SortType) => {\n    this.setState({ sortType: sortBy });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    const listOfGoods = getReorderedGoods(\n      goodsFromServer, { isReversed, sortType },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info ${sortType !== SortType.ALPHABET ? 'is-light' : ''}`}\n            onClick={() => this.handleSort(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success ${sortType !== SortType.LENGTH ? 'is-light' : ''}`}\n            onClick={() => this.handleSort(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning ${!isReversed ? 'is-light' : ''}`}\n            onClick={this.handleReverse}\n          >\n            Reverse\n          </button>\n\n          {\n            isReversed || sortType !== SortType.NONE\n              ? (\n                <button\n                  type=\"button\"\n                  className=\"button is-danger is-light\"\n                  onClick={this.handleReset}\n                >\n                  Reset\n                </button>\n              )\n              : (null)\n          }\n\n        </div>\n\n        <ul>\n          {\n            listOfGoods.map(good => <li key={good}>{good}</li>)\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}